/*
** Copyright (C) 2016  International Business Machines Corporation
** All Rights Reserved
*/
namespace com.ibm.streamsx.nlp;

use com.ibm.streamsx.nlp.internal::*;
use com.ibm.streamsx.nlp.utils::*;

/**
 * This operator trains a model for ContentRanking based on training documents.
 *
 * The ContentRankingModelBuilder operator should be used in a Streams release where SPL Python primitive support is not provided (e.g. Streams 3.2) . It uses a **ShellSource** operator to invoke Python scripts.
 * When using a Streams release 4.2 or later, it is recommended to create a *SPL Python primitive operator* to invoke Python classes or functions.
 * 
 * @param pythonCommand
 * The name of the python binary. The default name is `python`.
 * With this parameter you can change the version and the location of the python command according to your environment.
 * Content ranking scripts need python 2.7 or later!
 *
 * @param pythonScript
 * The name of the python script. The default is `<toolkit_dir>/etc/python/ContentRankingModelBuilder.py`.
 *
 * @param xRegFile
 * The name of the input file containing the X-register training data.
 *
 * @param yRegFile
 * The name of the input file containing the Y-register training data.
 * 
 * @param modelFilesDirectory
 * The name of the output directory where the model pkl files are created.
 * 
 * @param nEpoch
 * The number of epochs used for neural network training. 
 */
public composite ContentRankingModelBuilder
(
) {
	param
		expression<rstring> $pythonCommand: "python"; // Content ranking scripts need python 2.7 or above!
		expression<rstring> $pythonScript: getToolkitPath()+"/etc/python/ContentRankingModelBuilder.py";
		expression<rstring> $xRegFile;
		expression<rstring> $yRegFile;
		expression<rstring> $modelFilesDirectory;
		expression<rstring> $nEpoch: "5";

	graph 

		(stream<rstring result> ResultStream) as CRMB = ContentRankingModelBuilderCore () {
			param 
				nEpoch: $nEpoch;
				xRegFile: $xRegFile;
				yRegFile: $yRegFile;
				modelFilesDirectory: $modelFilesDirectory;
				pythonCommand: $pythonCommand;
				pythonScript: $pythonScript;
		}
}

/**
 * This operator trains a model for ContentRanking based on training documents.
 *
 * The ContentRankingModelBuilder operator should be used in a Streams release where SPL Python primitive support is not provided (e.g. Streams 3.2) . It uses a **ShellSource** operator to invoke Python scripts.
 * When using a Streams release 4.2 or later, it is recommended to create a *SPL Python primitive operator* to invoke Python classes or functions.
 * 
 * @output ResultStream
 * Result stream, window marker at end of building the model 
 *
 * @param pythonCommand
 * The name of the python binary. The default name is `python`.
 * With this parameter you can change the version and the location of the python command according to your environment.
 * Content ranking scripts need python 2.7 or later!
 *
 * @param pythonScript
 * The name of the python script. The default is `<toolkit_dir>/etc/python/ContentRankingModelBuilder.py`.
 *
 * @param xRegFile
 * The name of the input file containing the X-register training data.
 *
 * @param yRegFile
 * The name of the input file containing the Y-register training data.
 * 
 * @param modelFilesDirectory
 * The name of the output directory where the model pkl files are created.
 * 
 * @param nEpoch
 * The number of epochs used for neural network training. 
 */
composite ContentRankingModelBuilderCore
( output ResultStream
) {
	param
		expression<rstring> $pythonCommand: "python"; // Content ranking scripts need python 2.7 or above!
		expression<rstring> $pythonScript: getToolkitPath()+"/etc/python/ContentRankingModelBuilder.py";
		expression<rstring> $xRegFile;
		expression<rstring> $yRegFile;
		expression<rstring> $modelFilesDirectory;
		expression<rstring> $nEpoch: "5";

	graph 

		// The stdout stream from the grep command is sent on the operator's first output port; the stderr stream is sent on the 
		// second output port.
		(
			stream<rstring ln> OutStream;
			stream<rstring ln> ErrStream;
			stream<int32 exitCode, rstring exitReason> StatStream as ST
		) = ShellSource() { 
			param
				command: $pythonCommand+" "+$pythonScript+" "+$xRegFile+" "+$yRegFile+" "+$modelFilesDirectory+" "+$nEpoch;
			output
				ST: exitCode = exitCode(), exitReason = exitReason();
		}

		() as WriterO = Custom(OutStream as I){
			logic
			onTuple I : {
				printStringLn(I.ln);
			}
		}

		() as WriterE = Custom(ErrStream as I) {
			logic
			onTuple I: {
				appTrc(Trace.error, I.ln);
			}
		}
		
		(stream<rstring result> ResultStream) as WriterStat = Custom(StatStream as I) {
			logic onTuple I: {
				if (exitCode != 0) 
					appTrc(Trace.error, "Model Builder exit code: " + (rstring)exitCode + " reason: " + exitReason);
				printStringLn("Model Builder exit code: " + (rstring)exitCode + " reason: " + exitReason);
				submit(Sys.WindowMarker, ResultStream);
			}
		}

}

/**
 * This operator trains a model for ContentRanking based on training documents.
 *
 * The ContentRankingModelBuilder operator should be used in a Streams release where SPL Python primitive support is not provided (e.g. Streams 3.2) . It uses a **ShellSource** operator to invoke Python scripts.
 * When using a Streams release 4.2 or later, it is recommended to create a *SPL Python primitive operator* to invoke Python classes or functions.
 * 
 * @output ResultStream
 * Result stream, window marker at end of building the model 
 *
 * @param pythonCommand
 * The name of the python binary. The default name is `python`.
 * With this parameter you can change the version and the location of the python command according to your environment.
 * Content ranking scripts need python 2.7 or later!
 *
 * @param pythonScript
 * The name of the python script. The default is `<toolkit_dir>/etc/python/ContentRankingModelBuilder.py`.
 *
 * @param xRegFile
 * The name of the input file containing the X-register training data.
 *
 * @param yRegFile
 * The name of the input file containing the Y-register training data.
 * 
 * @param modelFilesDirectory
 * The name of the output directory where the model pkl files are created.
 * 
 * @param nEpoch
 * The number of epochs used for neural network training. 
 */
public composite ContentRankingModelBuilder2
( output ResultStream
) {
	param
		expression<rstring> $pythonCommand: "python"; // Content ranking scripts need python 2.7 or above!
		expression<rstring> $pythonScript: getToolkitPath()+"/etc/python/ContentRankingModelBuilder.py";
		expression<rstring> $xRegFile;
		expression<rstring> $yRegFile;
		expression<rstring> $modelFilesDirectory;
		expression<rstring> $nEpoch: "5";

	graph 

		(stream<rstring result> ResultStream) as CRMB = ContentRankingModelBuilderCore () {
			param 
				nEpoch: $nEpoch;
				xRegFile: $xRegFile;
				yRegFile: $yRegFile;
				modelFilesDirectory: $modelFilesDirectory;
				pythonCommand: $pythonCommand;
				pythonScript: $pythonScript;
		}

}