/*
** Copyright (C) 2016  International Business Machines Corporation
** All Rights Reserved
*/
use com.ibm.streamsx.nlp::*;

composite FunctionsSample
{

	graph 

 		stream<rstring text> TextStream = FileSource() {
			param
				file: "SourceData.txt";
				parsing: permissive;
		}

		(stream<IdfCorpusBuilder.IdfCorpusType> TrainingStream as O) as PrepareTerms = Custom(TextStream as I){
			logic
				state: {
					boolean ok = com.ibm.streamsx.nlp.utils::initializeLemmatizer();
				}
				onTuple I: {
					mutable list<rstring> lemmas = [];
					com.ibm.streamsx.nlp.utils::lemmatize(text, lemmas);
					
					mutable list<rstring> terms = [];
					com.ibm.streamsx.nlp.utils::generateNgram(lemmas, 1u, 3u, terms);

					submit({terms=terms}, O);
				}
				onPunct I: {
					if (currentPunct() == Sys.WindowMarker) {
						submit(Sys.WindowMarker, O);
					}
				}
		}

		() as SinkOutput = FileSink(TrainingStream) {
			param
				file:  "out.txt";
				format: csv;
				flushOnPunctuation: true;
		}

}
